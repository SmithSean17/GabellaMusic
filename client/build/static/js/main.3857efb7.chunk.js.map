{"version":3,"sources":["redux/user/user.types.js","redux/user/user.reducer.js","redux/spotify/spotify.types.js","redux/spotify/spotify.reducer.js","redux/root-reducer.js","redux/user/user.actions.js","redux/user/user.sagas.js","redux/spotify/spotify.actions.js","redux/spotify/spotify.sagas.js","redux/root-saga.js","redux/store.js","redux/user/user.selectors.js","redux/spotify/spotify.selectors.js","components/button/button.component.jsx","components/spotify-element/spotify-element.component.jsx","components/spotify-container/spotify-container.component.jsx","pages/homepage/homepage.component.jsx","components/header/header.component.jsx","components/footer/footer.component.jsx","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-sign-up.component.jsx","App.js","index.js"],"names":["UserActionTypes","SET_CURRENT_USER","SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","INITIAL_STATE","currentUser","error","userReducer","state","action","type","payload","SpotifyTypes","CONNECT_FAILURE","CHECK_CONNECTION","MARK_CONNECTED","REFRESH_AUTH_TOKEN_START","REFRESH_AUTH_TOKEN_SUCCESS","REFRESH_AUTH_TOKEN_FAILURE","FETCH_TOP_ARTISTS_START","FETCH_TOP_ARTISTS_SUCCESS","FETCH_TOP_ARTISTS_FAILURE","FETCH_TOP_TRACKS_START","FETCH_TOP_TRACKS_SUCCESS","FETCH_TOP_TRACKS_FAILURE","isConnected","lastTokenRefresh","photo","topArtists","topTracks","SpotifyReducer","SpotifyActionTypes","latestRefresh","rootReducer","combineReducers","user","spotifyState","spotifyReducer","setCurrentUser","signInFailure","signIn","isLoggedIn","signOut","signUp","signInAfterSignUp","onSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas","email","password","axios","post","data","put","get","userLoggedIn","locals","name","passwordConfirm","takeLatest","all","call","fetchTopArtistsSuccess","endpointData","fetchTopTracksSuccess","fetchTopTracksFailure","refreshAuthTokenAsync","refreshAuthTokenStart","onCheckConnection","fetchEndpointDataAsync","fetchTopArtistsStart","fetchTopTracksStart","spotifySagas","userConnectedRes","status","lastRefresh","response","withCredentials","refreshUser","endpoint","stateProps","message","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","selectCurrentUser","createSelector","selectSpotifyState","selectIsConnected","selectPhoto","selectLastTokenRefresh","selectTopArtists","selectTopTracks","Button","children","props","SpotifyElement","item","images","external_urls","className","src","url","album","artists","artistString","preview_url","length","map","artist","join","mapStateToProps","createStructuredSelector","connect","dispatch","useState","userPhoto","setUserPhoto","setArtists","tracks","setTracks","useEffect","Date","parse","now","getTime","items","idx","key","track","defaults","signOutStart","checkConnection","handleConnectToSpotifyButton","a","window","location","firstName","split","onClick","Header","Footer","href","FormInput","handleChange","label","otherProps","onChange","value","signInStart","userCredentials","setCredentials","handleSubmit","event","preventDefault","target","onSubmit","required","signUpStart","setUserCredentials","SignUpAndSignUpPage","checkUserSession","exact","path","render","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3857efb7.chunk.js","sourcesContent":["const UserActionTypes = {\r\n  SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n  SIGN_IN_START: 'SIGN_IN_START',\r\n  SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\r\n  SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\r\n  CHECK_USER_SESSION: 'CHECK_USER_SESSION',\r\n  SIGN_OUT_START: 'SIGN_OUT_START',\r\n  SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\r\n  SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\r\n  SIGN_UP_START: 'SIGN_UP_START',\r\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\r\n  SIGN_UP_FAILURE: 'SIGN_UP_FAILURE',\r\n};\r\n\r\nexport default UserActionTypes;\r\n","import UserActionTypes from './user.types';\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: null,\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UserActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case UserActionTypes.SIGN_IN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n        error: null,\r\n      };\r\n    case UserActionTypes.SIGN_OUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        currentUser: null,\r\n        error: null,\r\n      };\r\n    case UserActionTypes.SIGN_IN_FAILURE:\r\n    case UserActionTypes.SIGN_OUT_FAILURE:\r\n    case UserActionTypes.SIGN_UP_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","const SpotifyTypes = {\r\n  CONNECT_FAILURE: 'CONNECT_FAILURE',\r\n  CHECK_CONNECTION: 'CHECK_CONNECTION',\r\n  MARK_CONNECTED: 'MARK_CONNECTED',\r\n  REFRESH_AUTH_TOKEN_START: 'REFRESH_AUTH_TOKEN_START',\r\n  REFRESH_AUTH_TOKEN_SUCCESS: 'REFRESH_AUTH_TOKEN_SUCCESS',\r\n  REFRESH_AUTH_TOKEN_FAILURE: 'REFRESH_AUTH_TOKEN_FAILURE',\r\n  FETCH_TOP_ARTISTS_START: 'FETCH_TOP_ARTISTS_START',\r\n  FETCH_TOP_ARTISTS_SUCCESS: 'FETCH_TOP_ARTISTS_SUCCESS',\r\n  FETCH_TOP_ARTISTS_FAILURE: 'FETCH_TOP_ARTISTS_FAILURE',\r\n  FETCH_TOP_TRACKS_START: 'FETCH_TOP_TRACKS_START',\r\n  FETCH_TOP_TRACKS_SUCCESS: 'FETCH_TOP_TRACKS_SUCCESS',\r\n  FETCH_TOP_TRACKS_FAILURE: 'FETCH_TOP_TRACKS_FAILURE',\r\n};\r\n\r\nexport default SpotifyTypes;\r\n","import SpotifyActionTypes from './spotify.types';\r\n\r\nconst INITIAL_STATE = {\r\n  isConnected: false,\r\n  lastTokenRefresh: null,\r\n  photo: '',\r\n  topArtists: [],\r\n  topTracks: [],\r\n  error: null,\r\n};\r\n\r\nconst SpotifyReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SpotifyActionTypes.MARK_CONNECTED:\r\n      return {\r\n        ...state,\r\n        isConnected: true,\r\n        error: null,\r\n        lastTokenRefresh: action.payload.latestRefresh,\r\n        photo: action.payload.photo,\r\n      };\r\n    case SpotifyActionTypes.REFRESH_AUTH_TOKEN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        lastTokenRefresh: action.payload,\r\n      };\r\n    case SpotifyActionTypes.CONNECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isConnected: false,\r\n        error: action.payload,\r\n      };\r\n    case SpotifyActionTypes.FETCH_TOP_ARTISTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        topArtists: action.payload,\r\n        error: null,\r\n      };\r\n    case SpotifyActionTypes.FETCH_TOP_TRACKS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        topTracks: action.payload,\r\n        error: null,\r\n      };\r\n    case SpotifyActionTypes.FETCH_TOP_ARTISTS_FAILURE:\r\n    case SpotifyActionTypes.FETCH_TOP_TRACKS_FAILURE:\r\n    case SpotifyActionTypes.REFRESH_AUTH_TOKEN_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SpotifyReducer;\r\n","import { combineReducers } from 'redux';\r\n//import { persistReducer } from 'redux-persist';\r\n//import storage from 'redux-persist/lib/storage';\r\n\r\nimport userReducer from './user/user.reducer';\r\nimport spotifyReducer from './spotify/spotify.reducer';\r\n\r\n// const persistConfig = {\r\n//   key: 'root',\r\n//   storage,\r\n//   whitelist: ['cart'],\r\n// };\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  spotifyState: spotifyReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import UserActionTypes from './user.types';\r\n\r\nexport const setCurrentUser = (user) => ({\r\n  type: UserActionTypes.SET_CURRENT_USER,\r\n  payload: user,\r\n});\r\n\r\nexport const signInStart = (email, password) => ({\r\n  type: UserActionTypes.SIGN_IN_START,\r\n  payload: { email, password },\r\n});\r\n\r\nexport const signInSuccess = (user) => ({\r\n  type: UserActionTypes.SIGN_IN_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const signInFailure = (error) => ({\r\n  type: UserActionTypes.SIGN_IN_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const checkUserSession = () => ({\r\n  type: UserActionTypes.CHECK_USER_SESSION,\r\n});\r\n\r\nexport const signOutStart = () => ({\r\n  type: UserActionTypes.SIGN_OUT_START,\r\n});\r\n\r\nexport const signOutSuccess = () => ({\r\n  type: UserActionTypes.SIGN_OUT_SUCCESS,\r\n});\r\n\r\nexport const signOutFailure = (error) => ({\r\n  type: UserActionTypes.SIGN_OUT_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const signUpStart = (name, email, password, passwordConfirm) => ({\r\n  type: UserActionTypes.SIGN_UP_START,\r\n  payload: { name, email, password, passwordConfirm },\r\n});\r\n\r\nexport const signUpSuccess = (user) => ({\r\n  type: UserActionTypes.SIGN_UP_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const signUpFailure = (error) => ({\r\n  type: UserActionTypes.SIGN_UP_FAILURE,\r\n  payload: error,\r\n});\r\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types';\r\n\r\nimport {\r\n  setCurrentUser,\r\n  signInSuccess,\r\n  signInFailure,\r\n  signOutSuccess,\r\n  signOutFailure,\r\n  signUpSuccess,\r\n  signUpFailure,\r\n} from './user.actions';\r\n\r\nimport axios from 'axios';\r\n\r\nexport function* signIn({ payload: { email, password } }) {\r\n  try {\r\n    const { data } = yield axios.post(\r\n      'http://localhost:8000/api/v1/users/login',\r\n      {\r\n        email,\r\n        password,\r\n      }\r\n    );\r\n\r\n    yield put(signInSuccess(data.data.user));\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* isLoggedIn() {\r\n  try {\r\n    const userLoggedIn = yield axios.get(\r\n      'http://localhost:8000/api/v1/users/isLoggedIn'\r\n    );\r\n\r\n    if (!userLoggedIn.data.locals.user) return;\r\n    yield put(setCurrentUser(userLoggedIn.data.locals.user));\r\n  } catch (err) {\r\n    yield put(signInFailure(err));\r\n  }\r\n}\r\n\r\nexport function* signOut() {\r\n  try {\r\n    yield axios.get('http://localhost:8000/api/v1/users/logout');\r\n    yield put(signOutSuccess());\r\n  } catch (err) {\r\n    yield put(signOutFailure(err));\r\n  }\r\n}\r\n\r\nexport function* signUp({\r\n  payload: { name, email, password, passwordConfirm },\r\n}) {\r\n  try {\r\n    const { data } = yield axios.post(\r\n      'http://localhost:8000/api/v1/users/signup',\r\n      {\r\n        name,\r\n        email,\r\n        password,\r\n        passwordConfirm,\r\n      }\r\n    );\r\n\r\n    yield put(signUpSuccess(data.data.user));\r\n  } catch (err) {\r\n    yield put(signUpFailure(err));\r\n  }\r\n}\r\n\r\nexport function* signInAfterSignUp({ payload: user }) {\r\n  yield put(setCurrentUser(user));\r\n}\r\n\r\nexport function* onSignInStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_IN_START, signIn);\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isLoggedIn);\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\r\n}\r\n\r\nexport function* onSignUpSuccess() {\r\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\nexport function* userSagas() {\r\n  yield all([\r\n    call(onSignInStart),\r\n    call(onCheckUserSession),\r\n    call(onSignOutStart),\r\n    call(onSignUpStart),\r\n    call(onSignUpSuccess),\r\n  ]);\r\n}\r\n","import SpotifyActionTypes from './spotify.types';\r\n\r\nexport const markConnected = (latestRefresh, photo) => ({\r\n  type: SpotifyActionTypes.MARK_CONNECTED,\r\n  payload: { latestRefresh, photo },\r\n});\r\n\r\nexport const connectFailure = (error) => ({\r\n  type: SpotifyActionTypes.CONNECT_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const refreshAuthTokenStart = () => ({\r\n  type: SpotifyActionTypes.REFRESH_AUTH_TOKEN_START,\r\n});\r\n\r\nexport const refreshAuthTokenSuccess = (latestRefresh) => ({\r\n  type: SpotifyActionTypes.REFRESH_AUTH_TOKEN_SUCCESS,\r\n  payload: latestRefresh,\r\n});\r\n\r\nexport const refreshAuthTokenFailure = (error) => ({\r\n  type: SpotifyActionTypes.REFRESH_AUTH_TOKEN_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const checkConnection = () => ({\r\n  type: SpotifyActionTypes.CHECK_CONNECTION,\r\n});\r\n\r\nexport const fetchTopArtistsStart = (endpoint) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_ARTISTS_START,\r\n  payload: endpoint,\r\n});\r\n\r\nexport const fetchTopArtistsSuccess = (endpointData) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_ARTISTS_SUCCESS,\r\n  payload: endpointData,\r\n});\r\n\r\nexport const fetchTopArtistsFailure = (error) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_ARTISTS_FAILURE,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchTopTracksStart = (endpoint) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_TRACKS_START,\r\n  payload: endpoint,\r\n});\r\n\r\nexport const fetchTopTracksSuccess = (endpointData) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_TRACKS_SUCCESS,\r\n  payload: endpointData,\r\n});\r\n\r\nexport const fetchTopTracksFailure = (error) => ({\r\n  type: SpotifyActionTypes.FETCH_TOP_TRACKS_FAILURE,\r\n  payload: error,\r\n});\r\n","import { takeLatest, put, all, call } from 'redux-saga/effects';\r\n\r\nimport SpotifyActionTypes from './spotify.types';\r\n\r\nimport {\r\n  markConnected,\r\n  connectFailure,\r\n  refreshAuthTokenSuccess,\r\n  refreshAuthTokenFailure,\r\n  fetchTopArtistsSuccess,\r\n  fetchTopArtistsFailure,\r\n  fetchTopTracksSuccess,\r\n  fetchTopTracksFailure,\r\n} from './spotify.actions';\r\n\r\nimport axios from 'axios';\r\n\r\nexport function* isConnected() {\r\n  try {\r\n    const userConnectedRes = yield axios.get(\r\n      'http://localhost:8000/api/v1/users/isConnectedToSpotify'\r\n    );\r\n\r\n    if (!userConnectedRes.status) return;\r\n    yield put(\r\n      markConnected(\r\n        userConnectedRes.data.lastRefresh,\r\n        userConnectedRes.data.photo\r\n      )\r\n    );\r\n  } catch (err) {\r\n    yield put(connectFailure(err.response.data.status));\r\n  }\r\n}\r\n\r\nexport function* refreshAuthTokenAsync() {\r\n  try {\r\n    const refreshUser = yield axios.get(\r\n      'http://localhost:8000/api/v1/spotify/refreshToken',\r\n      {\r\n        withCredentials: true,\r\n      }\r\n    );\r\n    yield put(refreshAuthTokenSuccess(refreshUser.data.lastRefresh));\r\n  } catch (err) {\r\n    yield put(refreshAuthTokenFailure(err));\r\n  }\r\n}\r\n\r\nexport function* refreshAuthTokenStart() {\r\n  yield takeLatest(\r\n    SpotifyActionTypes.REFRESH_AUTH_TOKEN_START,\r\n    refreshAuthTokenAsync\r\n  );\r\n}\r\n\r\nexport function* onCheckConnection() {\r\n  yield takeLatest(SpotifyActionTypes.CHECK_CONNECTION, isConnected);\r\n}\r\n\r\nexport function* fetchEndpointDataAsync(endpoint, stateProps) {\r\n  try {\r\n    const response = yield axios.post(\r\n      'http://localhost:8000/api/v1/spotify/getEndpointData',\r\n\r\n      {\r\n        endpoint,\r\n        withCredentials: true,\r\n      }\r\n    );\r\n\r\n    const endpointData = response.data;\r\n\r\n    if (stateProps === 'topArtists') {\r\n      yield put(fetchTopArtistsSuccess(endpointData));\r\n    } else if (stateProps === 'topTracks') {\r\n      yield put(fetchTopTracksSuccess(endpointData));\r\n    }\r\n  } catch (err) {\r\n    if (stateProps === 'topArtists') {\r\n      yield put(fetchTopArtistsFailure(err.message));\r\n    } else if (stateProps === 'topTracks') {\r\n      yield put(fetchTopTracksFailure(err.message));\r\n    }\r\n  }\r\n}\r\n\r\nexport function* fetchTopArtistsStart(endpoint, stateProps = 'topArtists') {\r\n  yield takeLatest(\r\n    SpotifyActionTypes.FETCH_TOP_ARTISTS_START,\r\n    fetchEndpointDataAsync,\r\n    (endpoint = 'me/top/artists?time_range=long_term'),\r\n    stateProps\r\n  );\r\n}\r\n\r\nexport function* fetchTopTracksStart(endpoint, stateProps = 'topTracks') {\r\n  yield takeLatest(\r\n    SpotifyActionTypes.FETCH_TOP_TRACKS_START,\r\n    fetchEndpointDataAsync,\r\n    (endpoint = 'me/top/tracks?time_range=long_term'),\r\n    stateProps\r\n  );\r\n}\r\n\r\nexport function* spotifySagas() {\r\n  yield all([\r\n    call(onCheckConnection),\r\n    call(refreshAuthTokenStart),\r\n    call(fetchTopArtistsStart),\r\n    call(fetchTopTracksStart),\r\n  ]);\r\n}\r\n","import { all, call } from 'redux-saga/effects';\r\n\r\nimport { userSagas } from './user/user.sagas';\r\nimport { spotifySagas } from './spotify/spotify.sagas';\r\n\r\nexport default function* rootSaga() {\r\n  yield all([call(userSagas), call(spotifySagas)]);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\n//import { persistStore } from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './root-reducer';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  middlewares.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\n//export const persistor = persist(store);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectUser = (state) => state.user;\r\n\r\nexport const selectCurrentUser = createSelector(\r\n  [selectUser],\r\n  (user) => user.currentUser\r\n);\r\n","import { createSelector } from 'reselect';\r\n\r\nconst selectSpotifyState = (state) => state.spotifyState;\r\n\r\nexport const selectIsConnected = createSelector(\r\n  [selectSpotifyState],\r\n  (spotifyState) => spotifyState.isConnected\r\n);\r\n\r\nexport const selectPhoto = createSelector(\r\n  [selectSpotifyState],\r\n  (spotifyState) => spotifyState.photo\r\n);\r\n\r\nexport const selectLastTokenRefresh = createSelector(\r\n  [selectSpotifyState],\r\n  (spotifyState) => spotifyState.lastTokenRefresh\r\n);\r\n\r\nexport const selectTopArtists = createSelector(\r\n  [selectSpotifyState],\r\n  (spotifyState) => spotifyState.topArtists\r\n);\r\n\r\nexport const selectTopTracks = createSelector(\r\n  [selectSpotifyState],\r\n  (spotifyState) => spotifyState.topTracks\r\n);\r\n","import React from 'react';\r\n\r\nimport './button.styles.scss';\r\n\r\nconst Button = ({ children, ...props }) => (\r\n  <button {...props}>{children}</button>\r\n);\r\n\r\nexport default Button;\r\n","import React /*{ useState }*/ from 'react';\r\n\r\nimport './spotify-element.styles.scss';\r\n\r\nconst SpotifyElement = ({ type, item }) => {\r\n  if (type === 'artist') {\r\n    const { name, external_urls, images } = item;\r\n    return (\r\n      <div className='spotify-element'>\r\n        <img className='artist-image' src={images[0].url} />\r\n        <span>{name}</span>\r\n      </div>\r\n    );\r\n  } else if (type === 'track') {\r\n    const { album, artists, name, preview_url } = item;\r\n    const artistString =\r\n      artists.length > 1\r\n        ? artists.map((artist) => artist.name).join(', ')\r\n        : artists[0].name;\r\n\r\n    return (\r\n      <div className='spotify-element'>\r\n        <img className='album-image' src={album.images[0].url} />\r\n        <div className='details-container'>\r\n          <ul>\r\n            <li className='main-text'>{name}</li>\r\n            <li className='small-text'>{album.name}</li>\r\n            <li className='small-text'>{artistString}</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else return;\r\n};\r\n\r\nexport default SpotifyElement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport SpotifyElement from '../spotify-element/spotify-element.component';\r\n\r\nimport {\r\n  selectIsConnected,\r\n  selectPhoto,\r\n  selectLastTokenRefresh,\r\n  selectTopArtists,\r\n  selectTopTracks,\r\n} from '../../redux/spotify/spotify.selectors';\r\nimport {\r\n  fetchTopArtistsStart,\r\n  fetchTopTracksStart,\r\n} from '../../redux/spotify/spotify.actions';\r\n\r\nimport './spotify-container.styles.scss';\r\n\r\nconst SpotifyContainer = ({\r\n  isConnected,\r\n  photo,\r\n  lastTokenRefresh,\r\n  fetchTopArtistsStart,\r\n  fetchTopTracksStart,\r\n  topArtists,\r\n  topTracks,\r\n}) => {\r\n  const [userPhoto, setUserPhoto] = useState('');\r\n  const [artists, setArtists] = useState([]);\r\n  const [tracks, setTracks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (isConnected && lastTokenRefresh !== null) {\r\n      if (\r\n        Date.parse(lastTokenRefresh) + 60 * 60 * 1000 >\r\n        new Date(Date.now()).getTime()\r\n      ) {\r\n        fetchTopArtistsStart();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isConnected && lastTokenRefresh !== null) {\r\n      if (\r\n        Date.parse(lastTokenRefresh) + 60 * 60 * 1000 >\r\n        new Date(Date.now()).getTime()\r\n      ) {\r\n        fetchTopTracksStart();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (photo) {\r\n      setUserPhoto(photo);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (topArtists.data) {\r\n      if (topArtists.data.items.length > 0) {\r\n        setArtists(topArtists.data.items);\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (topTracks.data) {\r\n      if (topTracks.data.items.length > 0) {\r\n        setTracks(topTracks.data.items);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {userPhoto ? <img className='user-photo' src={userPhoto} /> : null}\r\n      </div>\r\n      <h2 className='top-artists'>Your Top Artists On Spotify</h2>\r\n      <div className='spotify-container'>\r\n        {artists\r\n          ? artists.map((artist, idx) => (\r\n              <SpotifyElement\r\n                className='spotify-element'\r\n                type='artist'\r\n                key={idx}\r\n                item={artist}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n      <h2 className='top-artists'>Your Top Spotify Tracks</h2>\r\n      <div className='spotify-container'>\r\n        {tracks\r\n          ? tracks.map((track, idx) => (\r\n              <SpotifyElement\r\n                className='spotify-element'\r\n                type='track'\r\n                key={idx}\r\n                item={track}\r\n              />\r\n            ))\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isConnected: selectIsConnected,\r\n  photo: selectPhoto,\r\n  lastTokenRefresh: selectLastTokenRefresh,\r\n  topArtists: selectTopArtists,\r\n  topTracks: selectTopTracks,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchTopArtistsStart: () => dispatch(fetchTopArtistsStart()),\r\n  fetchTopTracksStart: () => dispatch(fetchTopTracksStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SpotifyContainer);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nimport { selectCurrentUser } from '../../redux/user/user.selectors';\r\nimport { signOutStart } from '../../redux/user/user.actions';\r\nimport {\r\n  selectIsConnected,\r\n  selectLastTokenRefresh,\r\n} from '../../redux/spotify/spotify.selectors';\r\nimport {\r\n  checkConnection,\r\n  refreshAuthTokenStart,\r\n} from '../../redux/spotify/spotify.actions';\r\n\r\nimport Button from '../../components/button/button.component';\r\nimport SpotifyContainer from '../../components/spotify-container/spotify-container.component';\r\n\r\nimport axios from 'axios';\r\nimport './homepage.styles.scss';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst HomePage = ({\r\n  currentUser,\r\n  isConnected,\r\n  checkConnection,\r\n  refreshAuthTokenStart,\r\n  signOutStart,\r\n  lastTokenRefresh,\r\n}) => {\r\n  useEffect(() => {\r\n    checkConnection();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (lastTokenRefresh !== null) {\r\n      refreshAuthTokenStart();\r\n    }\r\n  }, [lastTokenRefresh]);\r\n\r\n  const handleConnectToSpotifyButton = async () => {\r\n    window.location = 'http://localhost:8000/api/v1/spotify/login';\r\n  };\r\n\r\n  const handleRenderSpotifyButton = () => {\r\n    return isConnected ? null : (\r\n      <Button\r\n        onClick={handleConnectToSpotifyButton}\r\n        className='button submit-button'\r\n      >\r\n        <span>Connect to Spotify</span>\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  const handleRenderSpotifyContainer = () => {\r\n    return isConnected && lastTokenRefresh !== null ? (\r\n      <SpotifyContainer />\r\n    ) : null;\r\n  };\r\n\r\n  const firstName = currentUser.name.split(' ')[0];\r\n  return (\r\n    <div className='homepage'>\r\n      <div>\r\n        <h2>Welcome, {firstName}!</h2>\r\n        <div className='button-container'>\r\n          <div className='button'>{handleRenderSpotifyButton()}</div>\r\n          <div className='spotify'>{handleRenderSpotifyContainer()}</div>\r\n          <div className='button'>\r\n            <Button className='button submit-button' onClick={signOutStart}>\r\n              <span>Sign Out</span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  currentUser: selectCurrentUser,\r\n  isConnected: selectIsConnected,\r\n  lastTokenRefresh: selectLastTokenRefresh,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signOutStart: () => dispatch(signOutStart()),\r\n  checkConnection: () => dispatch(checkConnection()),\r\n  refreshAuthTokenStart: () => dispatch(refreshAuthTokenStart()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\n","import React from 'react';\r\n\r\nimport './header.styles.scss';\r\n\r\nconst Header = () => (\r\n  <div className='header'>\r\n    <h1>Gabella Music</h1>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './footer.styles.scss';\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <div className='footer'>\r\n      <span>Created by Giuliano Gabella</span>\r\n      <a\r\n        className='favicon-link'\r\n        href='https://icons8.com/icon/k6TNc9fgtK09/music-library'\r\n      >\r\n        Music Library icon by Icons8\r\n      </a>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport './form-input.styles.scss';\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\r\n  <div className='group'>\r\n    <input className='form-input' onChange={handleChange} {...otherProps} />\r\n    {label ? (\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? 'shrink' : ''\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default FormInput;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button from '../button/button.component';\r\nimport { signInStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-in.styles.scss';\r\n\r\nconst SignIn = ({ signInStart }) => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = userCredentials;\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    signInStart(email, password);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div className='sign-in'>\r\n      <h2>I already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          name='email'\r\n          type='email'\r\n          value={email}\r\n          handleChange={handleChange}\r\n          label='email'\r\n          required\r\n        />\r\n        <FormInput\r\n          name='password'\r\n          type='password'\r\n          value={password}\r\n          handleChange={handleChange}\r\n          label='password'\r\n          required\r\n        />\r\n\r\n        <div className='button'>\r\n          <Button\r\n            className='submit-button'\r\n            onSubmit={handleSubmit}\r\n            type='submit'\r\n          >\r\n            Sign In\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signInStart: (email, password) => dispatch(signInStart(email, password)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n","import React, { useState } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from '../form-input/form-input.component';\r\nimport Button from '../button/button.component';\r\nimport { signUpStart } from '../../redux/user/user.actions';\r\n\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({ signUpStart }) => {\r\n  const [userCredentials, setUserCredentials] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  const { name, email, password, passwordConfirm } = userCredentials;\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    signUpStart(name, email, password, passwordConfirm);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    setUserCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className='title'>I do not have an account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className='sign-up-form' onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type='text'\r\n          name='name'\r\n          value={name}\r\n          onChange={handleChange}\r\n          label='name'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='email'\r\n          name='email'\r\n          value={email}\r\n          onChange={handleChange}\r\n          label='email'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='password'\r\n          value={password}\r\n          onChange={handleChange}\r\n          label='password'\r\n          required\r\n        />\r\n        <FormInput\r\n          type='password'\r\n          name='passwordConfirm'\r\n          value={passwordConfirm}\r\n          onChange={handleChange}\r\n          label='confirm password'\r\n          required\r\n        />\r\n        <div className='button'>\r\n          <Button\r\n            className='submit-button'\r\n            onSubmit={handleSubmit}\r\n            type='submit'\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  signUpStart: (name, email, password, passwordConfirm) =>\r\n    dispatch(signUpStart(name, email, password, passwordConfirm)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);\r\n","import React from 'react';\r\n\r\nimport SignIn from '../../components/sign-in/sign-in.component';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nimport './sign-in-sign-up.styles.scss';\r\n\r\nconst SignUpAndSignUpPage = () => (\r\n  <div className='sign-in-and-sign-up'>\r\n    <SignIn />\r\n    <SignUp />\r\n  </div>\r\n);\r\n\r\nexport default SignUpAndSignUpPage;\r\n","import React, { useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.component';\nimport SignUpAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-sign-up.component.jsx';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\nconst App = ({ checkUserSession, currentUser }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n\n  return (\n    <div className='App'>\n      <Header />\n      <Switch>\n        <Route\n          exact\n          path='/'\n          render={() =>\n            currentUser !== null ? (\n              <Redirect to='/me' />\n            ) : (\n              <SignUpAndSignUpPage />\n            )\n          }\n        />\n        <Route\n          exact\n          path='/me'\n          render={() =>\n            currentUser === null ? <Redirect to='/' /> : <HomePage />\n          }\n        />\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n//import { PersistGate } from 'redux-persist/integration/react';\n\nimport { store /*persistor*/ } from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}